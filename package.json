{
  "name": "vscode-ceedling-test-adapter",
  "displayName": "Ceedling Test Explorer",
  "description": "Run your Ceedling tests in the Sidebar of Visual Studio Code",
  "icon": "img/icon.png",
  "author": {
    "name": "Kin Numaru"
  },
  "publisher": "numaru",
  "version": "1.5.2",
  "license": "MIT",
  "homepage": "https://github.com/numaru/vscode-ceedling-test-adapter",
  "repository": {
    "type": "git",
    "url": "https://github.com/numaru/vscode-ceedling-test-adapter.git"
  },
  "bugs": {
    "url": "https://github.com/numaru/vscode-ceedling-test-adapter/issues"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "ceedling",
    "test",
    "testing"
  ],
  "main": "out/main.js",
  "scripts": {
    "postinstall": "node ./node_modules/vscode/bin/install",
    "clean": "rimraf out *.vsix",
    "build": "tsc",
    "watch": "tsc -w",
    "rebuild": "npm run clean && npm run build",
    "package": "vsce package",
    "publish": "vsce publish"
  },
  "dependencies": {
    "@types/js-yaml": "^3.12.0",
    "@types/xml2js": "^0.4.3",
    "async-mutex": "^0.1.3",
    "js-yaml": "^3.13.1",
    "tree-kill": "^1.2.2",
    "tslib": "^1.9.3",
    "vscode-test-adapter-api": "^1.2.0",
    "vscode-test-adapter-util": "^0.5.1",
    "xml2js": "^0.4.19"
  },
  "devDependencies": {
    "typescript": "^3.3.3",
    "vsce": "^1.57.0",
    "vscode": "^1.1.29"
  },
  "engines": {
    "vscode": "^1.23.0"
  },
  "extensionDependencies": [
    "hbenl.vscode-test-explorer"
  ],
  "activationEvents": [
    "*"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Ceedling Test Explorer configuration",
      "properties": {
        "ceedlingExplorer.projectPath": {
          "description": "Path to the ceedling project directory",
          "type": "string",
          "default": ".",
          "scope": "resource"
        },
        "ceedlingExplorer.shellPath": {
          "description": "Path to the shell where ceedling is installed",
          "type": "string",
          "default": "null",
          "scope": "resource"
        },
        "ceedlingExplorer.debugConfiguration": {
          "description": "Debug configuration to run during test debug.",
          "type": "string",
          "scope": "resource"
        },
        "ceedlingExplorer.prettyTestLabel": {
          "markdownDescription": "Test label is prettier in the test explorer, that mean the label is shorter and without begin prefix. E.g. inactive `test_BlinkTaskShouldToggleLed`, active `BlinkTaskShouldToggleLed`",
          "type": "boolean",
          "default": true,
          "scope": "resource"
        },
        "ceedlingExplorer.prettyTestFileLabel": {
          "markdownDescription": "Test file label is prettier in the test explorer, that mean the label is shorter, without begin prefix, path and file type. E.g. inactive `test/LEDs/test_BlinkTask.c`, active `BlinkTask`",
          "type": "boolean",
          "default": true,
          "scope": "resource"
        },
        "ceedlingExplorer.testCommandArgs": {
          "markdownDescription": "The command line arguments used to run the ceedling tests",
          "type": "array",
          "default": [
            "test:${TEST_ID}"
          ],
          "scope": "resource"
        },
        "ceedlingExplorer.problemMatcher": {
          "markdownDescription": "Scans ceedling output text for known warning or error strings and reports these inline in the editor and in the Problems panel.&nbsp;Tries to resemble VSCode Tasks problemMatchers mechanism.",
          "type": "object",
          "scope": "resource",
          "properties": {
            "enabled": {
              "description": "Is problemMatcher scan enabled or not.",
              "type": "boolean",
              "default": true,
              "scope": "resource"
            },
            "scanStdout": {
              "description": "Scan stdout output for problems.",
              "type": "boolean",
              "default": true,
              "scope": "resource"
            },
            "scanStderr": {
              "description": "Scan stderr output for problems.",
              "type": "boolean",
              "default": true,
              "scope": "resource"
            },
            "pattern.regexp": {
              "description": "The regular expression to find an error, warning or info in the output. Default is for GCC.",
              "type": "string",
              "default": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
              "scope": "resource"
            },
            "pattern.file": {
              "description": "Index of the problem's filename.",
              "type": "integer",
              "default": 1,
              "scope": "resource"
            },
            "pattern.line": {
              "description": "Index of the problem's line.",
              "type": "integer",
              "default": 2,
              "scope": "resource"
            },
            "pattern.column": {
              "description": "Index of the problem's line character.",
              "type": "integer",
              "default": 3,
              "scope": "resource"
            },
            "pattern.severity": {
              "description": "Index of the problem's severity.",
              "type": "integer",
              "default": 4,
              "scope": "resource"
            },
            "pattern.message": {
              "description": "Index of the problem's message.",
              "type": "integer",
              "default": 5,
              "scope": "resource"
            }
          }
        }
      }
    }
  }
}